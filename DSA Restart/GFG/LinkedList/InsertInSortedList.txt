Link >> https://practice.geeksforgeeks.org/problems/insert-in-a-sorted-list/0

Description >>----------------------------------------------------------------------------------------
Given a linked list sorted in ascending order and an integer called data, insert data in the linked list such that the list remains sorted.

Example 1:

Input:
LinkedList: 25->36->47->58->69->80
data: 19
Output: 19 25 36 47 58 69 80
Example 2:

Input:
LinkedList: 50->100
data: 75
Output: 50 75 100
Your Task:
The task is to complete the function sortedInsert() which should insert the element in sorted Linked List and return the head of the linked list

Expected Time Complexity: O(N).
Expected Auxiliary Space: O(1).


Solution >>--------------------------------------------------------------------------------------------

 Node *sortedInsert(struct Node* head, int data) {
        // Code here
        Node* curr = new Node(data);
        
        if(head->data>=data){
            curr->next = head;
            return curr;
        }
        
        Node* slow = head;
        Node* fast = head->next;
        while(fast!=NULL and fast->data<=data){
            fast=fast->next;
            slow= slow->next;
        }
        
        curr->next = fast;
        slow->next = curr;
        return head;
    }
