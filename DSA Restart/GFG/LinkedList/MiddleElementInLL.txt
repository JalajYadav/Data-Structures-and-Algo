Link>> https://practice.geeksforgeeks.org/problems/finding-middle-element-in-a-linked-list/0

Description >>---------------------------------------------------------------------------------------

Given a singly linked list of N nodes.
The task is to find the middle of the linked list. For example, if the linked list is
1-> 2->3->4->5, then the middle node of the list is 3.
If there are two middle nodes(in case, when N is even), print the second middle element.
For example, if the linked list given is 1->2->3->4->5->6, then the middle node of the list is 4.

Example 1:

Input:
LinkedList: 1->2->3->4->5
Output: 3 
Explanation: 
Middle of linked list is 3.
______________________________________________________________________________________________________

Solution >>-------------------------------------------------------------------------------------------

int getMiddle(Node *head)
    {
        // Your code here
        int ans = 0;
        Node *dJumper = head;
        Node *sJumper = head;
        while(dJumper->next!=NULL and dJumper->next->next!=NULL){
            dJumper =dJumper->next->next;
            sJumper = sJumper->next;
        }
        if(dJumper->next==NULL){
            ans = sJumper->data;
            return ans;
        }
        ans = sJumper->next->data;
        return ans;
    }
