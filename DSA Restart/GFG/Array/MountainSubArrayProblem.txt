
Link>>>>https://practice.geeksforgeeks.org/problems/mountain-subarray-problem/1/?track=amazon-arrays&batchId=192#

Solution:
//Time Complexity O(N + Q)
//Space Complexity O(N)

class Solution{
  public:
    vector<bool> processQueries(int arr[], int n, vector<pair<int, int>> &queries,
                                int q) {
        // code here
        vector<int> left(n,0);
        vector<int> right(n,n-1);
        
        for(int i=1;i<n;i++){
            if(arr[i]>arr[i-1]){
                left[i]=i;
            }else{
                left[i]=left[i-1];
            }
        }
        
        for(int i=n-2;i>=0;i--){
            if(arr[i]>arr[i+1]){
                right[i]=i;
            }else{
                right[i]=right[i+1];
            }
        }
        
        vector<bool> res;
        for(pair<int,int> paiir:queries){
            if(right[paiir.first]>=left[paiir.second]){
                res.push_back(true);
            }else{
                res.push_back(false);
            }
        }
        
        return res;
    }
};
